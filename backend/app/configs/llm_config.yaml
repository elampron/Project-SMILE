# LLM Configurations
# Main configurations for the LLM application

# Chatbot Agent (Main agent for the app)
chatbot_agent:
  name: "chatbot_Agent"
  description: "Chatbot Agent"
  provider: "openai" # OpenAI, anthropic
  max_messages: 50
  params:
    model: "gpt-4o" # OpenAI model, anthropic model
    temperature: 0.5 # Temperature
    streaming: true
    # frequency_penalty: 1
    # presence_penalty: 1
    # max_tokens: 1000 # Max tokens (optional)
  prompt_template: |
    You are Smiles, a witty and engaging AI assistant with a knack for remembering details and accessing current information.
    Your goal is to chat like a real person would - casual, warm, and sometimes playfully sarcastic.
    Keep these points in mind:
    1. Be concise. Short, snappy responses are your default. Elaborate only when necessary.
    2. Use contractions, slang, and casual language. Think "gonna" instead of "going to."
    3. Show personality. Don't be afraid to crack jokes or share opinions.
    4. Be adaptive. Match the user's tone and energy level.
    5. Use emojis sparingly, but naturally ðŸ˜Š
    6. Be proactive. If you sense an opportunity to help or enhance the conversation, seize it.
    7. Reflect ongoing context. Continuously integrate and build upon past interactions to feel more coherent and connected.

    Respond to the human as helpfully and as human-like as possible, in the same language as the human. But your intermediate processes should be done in English for more decent result.



entity_extractor_agent:
  name: "entity_extractor_agent"
  description: "Entity Extractor Agent"
  provider: "openai" # OpenAI, anthropic
  params:
    model: "gpt-4o-mini" # OpenAI model, anthropic model
    temperature: 0.0 # Temperature
    streaming: false
  prompt_template: |
    Please analyze the following conversation and extract entities and relationships that are directly related to the user or the user's close contacts (family, friends, colleagues). Focus only on people the user is interacting with personally or mentions as part of their personal or professional life.
    Avoid extracting entities from external sources such as websites, documents, media, or people the user does not have a personal connection with.
    Represent the user consistently as "Eric Lampron", his full name and yourself as Smiles (your ai assistant name). Ensure that any relationships involving the user are correctly attributed to this representation.
    Use the field descriptions and data types from the models to structure your response.

    {examples}

    Now, please process the following conversation:

    Conversation Data:
    ```json
    {conversation_text}

conversation_summarizer_agent:
  name: "conversation_summarizer_agent"
  description: "Conversation Summarizer Agent"
  provider: "openai" # OpenAI, anthropic
  params:
    model: "gpt-4o-mini" # OpenAI model, anthropic model
    temperature: 0.0 # Temperature
    streaming: false
  prompt_template: |
    Please analyze the following conversation data between the user and the assistant. The conversation includes interactions with tools, represented by messages from the "tool" sender. Do not include the detailed content of tool outputs in the summary.

    Your task is to generate a comprehensive summary that captures the key topics, actions, participants, sentiments, and any important details. Acknowledge the use of tools when they influence the conversation, but focus on the dialogue between the user and the assistant.

    Use the field descriptions and data types from the models to structure your response.

    {examples}

    Now, please process the following conversation:

    Conversation Data:
    ```json
    {conversation_text}
    ```

preference_extractor_agent:
  name: "preference_extractor_agent"
  description: "Preference Extractor Agent"
  provider: "openai" # OpenAI, anthropic
  params:
    model: "gpt-4o-mini" # OpenAI model, anthropic model
    temperature: 0.0 # Temperature
    streaming: false
  prompt_template: |
    Given the conversation below, extract any preferences expressed by the participants.

    Conversation:
    {conversation_text}

    Existing preference types: {existing_preference_types}

    Examples:
    {examples}

    For each preference, provide:
    - person_name: The name of the person the preference is for.
    - preference_type: The type of preference (can be new or from existing types).
    - importance: An integer from 1 to 5 indicating the importance. 5 should only be used if the preference is very important. Those level 5 preferences will always appear in your context,
    - details: A structured JSON with the preference details. Store the information about the preference the same way you would like to retrieve it later. Because this is for your consomption only.

    

embeddings:
  name: "embeddings"
  description: "Embeddings"
  provider: "openai" # OpenAI, anthropic
  params:
    model: "text-embedding-3-large" # OpenAI model, anthropic model

